# Overrides the chart's name
nameOverride: {% if values.nameOverride is defined %}{{ values.nameOverride }}{% else %}null{% endif %}

# Overrides the chart's computed fullname
fullnameOverride: {% if values.fullnameOverride is defined %}{{ values.fullnameOverride }}{% else %}null{% endif %}

kubeVersionOverride: {% if values.kubeVersionOverride is defined %}{{ values.kubeVersionOverride }}{% else %}null{% endif %}
{% if (kind == 'deploy') or (kind == 'statefulset')  %}
# Number of replicas for the pod
replicas: {% if values.replicas is defined %}{{ values.replicas }}{% else %}1{% endif %}
{%- endif %}

# The number of old replicaSets to retain to allow rollback
revisionHistoryLimit: {% if values.revisionHistoryLimit is defined %}{{ values.revisionHistoryLimit }}{% else %}2{% endif %}

# Annotations for the pod
podAnnotations: {% if values.podAnnotations is defined %}
{{ values.podAnnotations|toYaml|indent(2, True) }}{% else %}{}
{%- endif %}

# The name of the ServiceAccount to use for the pod
serviceAccountName: {% if values.serviceAccountName is defined %}{{ values.serviceAccountName }}{% else %}""
#serviceAccountName: '{{ "{{" }} include "{{ projectName }}.fullname" . {{ "}}" }}'
{%- endif %}

# Image pull secrets for docker images
imagePullSecrets: {% if values.imagePullSecrets is defined %}
{{ values.imagePullSecrets|toYaml }}{% else %}[]
{%- endif %}

# Pod anti-affinity
affinity: {% if values.affinity is defined %}
{{ values.affinity|toYaml|indent(2, True) }}{% else %}{}
{%- endif %}

# Tolerations for the pod
tolerations: {% if values.tolerations is defined %}
{{ values.tolerations|toYaml }}{% else %}[]
{%- endif %}

# Node selector for the pod
nodeSelector: {% if values.nodeSelector is defined %}
{{ values.nodeSelector|toYaml|indent(2, True) }}{% else %}{}
{%- endif %}

# SecurityContext for the pod
podSecurityContext: {% if values.podSecurityContext is defined %}
{{ values.podSecurityContext|toYaml|indent(2, True) }}{% else %}{}
{%- endif %}

image:
  # Docker image registry for the image
  registry: {% if values.image.registry is defined %}{{ values.image.registry }}{% else %}null{% endif %}
  # Docker image repository for the image
  repository: {{ values.image.repository }}
  # Docker image tag for the image
  tag: {% if values.image.tag is defined %}{{ values.image.tag }}{% else %}null{% endif %}
  # Docker image pull policy
  pullPolicy: {% if values.image.pullPolicy is defined %}{{ values.image.pullPolicy }}{% else %}Always{% endif %}

# Configures the liveness probe for the container
livenessProbe: {% if values.livenessProbe is defined %}
{{ values.livenessProbe|toYaml|indent(2, True) }}{% else %}{}
{%- endif %}

# Configures the readiness probe for the container
readinessProbe: {% if values.readinessProbe is defined %}
{{ values.readinessProbe|toYaml|indent(2, True) }}{% else %}{}
{%- endif %}

# Define command for the container
command: {% if values.command is defined %}
{{ values.command|toYaml }}{% else %}[]
{%- endif %}

# Define arguments for the container
args: {% if values.args is defined %}
{{ values.args|toYaml }}{% else %}[]
{%- endif %}

# The SecurityContext for the container
containerSecurityContext: {% if values.containerSecurityContext is defined %}
{{ values.containerSecurityContext|toYaml|indent(2, True) }}{% else %}{}
{%- endif %}

# Environment variables to add to the pod (key: value)
env: {% if values.env is defined %}
{{ values.env|toYaml|indent(2, True) }}{% else %}{}
{%- endif %}

# Environment variables from secrets or configmaps to add to the pod
envFrom: {% if values.envFrom is defined %}
{{ values.envFrom|toYaml }}{% else %}[]
{%- endif %}

# Volume mounts to add to the the pod
volumeMounts: {% if values.volumeMounts is defined %}
{{ values.volumeMounts|toYaml }}{% else %}[]
#volumeMounts:
#- name: {{ projectName }}-config
#  mountPath: /config
{%- endif %}

# Resource requests and limits for the pod
resources: {% if values.resources is defined %}
{{ values.resources|toYaml|indent(2, True) }}{% else %}{}
{%- endif %}

# Volumes to add to the pod
volumes: {% if values.volumes is defined %}
{{ values.volumes|toYaml }}{% else %}[]
#volumes:
#- name: {{ projectName }}-config
#  configMap:
#    name: {{ projectName }}
{%- endif %}

# volumeClaimTemplates
volumeClaimTemplates: {% if values.volumeClaimTemplates is defined %}
{{ values.volumeClaimTemplates|toYaml }}{% else %}[]
#volumeClaimTemplates:
#- metadata:
#    name: {{ projectName }}-data
#  spec:
#    accessModes: [ "ReadWriteOnce" ]
#    resources:
#      requests:
#        storage: 1Gi
{%- endif %}

config: {% if values.config is defined %}{{ values.config|toYamlString }}{% else %}""{% endif %}

secrets: {% if values.secrets is defined %}{{ values.secrets }}{% else %}{}
{% endif %}

service: {% if values.service is defined %}
{{ values.service|toYaml|indent(2, True) }}{% else %}
  tcp:
    enabled: false
  udp:
    enabled: false
{%- endif %}

ingress: {% if values.ingress is defined %}
{{ values.ingress|toYaml|indent(2, True) }}{% else %}
  enabled: false
{%- endif %}

ingressList: {% if values.ingressList is defined %}
{{ values.ingressList|toYaml|indent(2, True) }}{% else %}[]
{%- endif %}
