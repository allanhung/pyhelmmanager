# Overrides the chart's name
nameOverride: null

# Overrides the chart's computed fullname
fullnameOverride: null

kubeVersionOverride: null

# Number of replicas for the pod
replicas: 1

# The number of old replicaSets to retain to allow rollback
revisionHistoryLimit: 2

# Annotations for the pod
podAnnotations: {}

# The name of the ServiceAccount to use for the pod
serviceAccountName: '{{ include "grafana-agent-eventhandler.fullname" . }}'

# Image pull secrets for docker images
imagePullSecrets: []

# Pod anti-affinity
affinity: {}

# Tolerations for the pod
tolerations: []

# Node selector for the pod
nodeSelector: {}

# SecurityContext for the pod
podSecurityContext: {}

image:
  # Docker image registry for the image
  registry: null
  # Docker image repository for the image
  repository: grafana/agent
  # Docker image tag for the image
  tag: null
  # Docker image pull policy
  pullPolicy: Always

# Configures the liveness probe for the container
livenessProbe: {}

# Configures the readiness probe for the container
readinessProbe: {}

# Define command for the container
command: 
- /bin/agent

# Define arguments for the container
args: 
- -config.file=/etc/agent/agent.yaml
- -enable-features=integrations-next
- -server.http.address=0.0.0.0:12345

# The SecurityContext for the container
containerSecurityContext: {}

# Environment variables to add to the pod (key: value)
env: 
  HOSTNAME:
    valueFrom:
      fieldRef:
        fieldPath: spec.nodeName

# Environment variables from secrets or configmaps to add to the pod
envFrom: []

# Volume mounts to add to the the pod
volumeMounts: 
- mountPath: /etc/agent
  name: grafana-agent
- mountPath: /etc/eventhandler
  name: eventhandler-cache

# Resource requests and limits for the pod
resources: {}

# Volumes to add to the pod
volumes: 
- configMap:
    name: '{{ include "grafana-agent-eventhandler.fullname" . }}'
  name: grafana-agent

# volumeClaimTemplates
volumeClaimTemplates: 
- metadata:
    name: eventhandler-cache
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
    storageClassName: '-'

config: 
  agent.yaml: |
    integrations:
      eventhandler:
        cache_path: /etc/eventhandler/eventhandler.cache
        logs_instance: '{{ include "grafana-agent-eventhandler.fullname" . }}'
    logs:
      configs:
      - clients:
        - url: http://loki-loki-distributed-distributor:3100/loki/api/v1/push
        name: '{{ include "grafana-agent-eventhandler.fullname" . }}'
        positions:
          filename: /tmp/positions0.yaml
    server:
      log_level: error

secrets: {}


service: 
  tcp:
    enabled: true
    services:
    - port: 12345
      portName: http-metrics
  udp:
    enabled: false

ingress: 
  enabled: false

ingressList: []
